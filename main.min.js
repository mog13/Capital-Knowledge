module.exports=function(t){function a(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return t[e].call(r.exports,r,r.exports,a),r.l=!0,r.exports}var n={};return a.m=t,a.c=n,a.d=function(t,n,e){a.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:e})},a.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(n,"a",n),n},a.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)},a.p="",a(a.s=4)}([function(t,a){t.exports={buildResponse:function(t,a){return{version:"1.0",sessionAttributes:t,response:a}},buildSpeechletResponse:function(t,a,n,e){return{outputSpeech:{type:"PlainText",text:a},card:{type:"Simple",title:t,content:a},reprompt:{outputSpeech:{type:"PlainText",text:n}},shouldEndSession:e}},buildSpeechletResponseWithoutCard:function(t,a,n){return{outputSpeech:{type:"PlainText",text:t},reprompt:{outputSpeech:{type:"PlainText",text:a}},shouldEndSession:n}}}},function(t,a,n){let e=n(5),r=n(0);const i=n(3).countries;let o=n(2);t.exports=function(t){let a=o.process("{{{{greeting ','}}?2}} {{welcomeMsg}}. "),n=e.populateGameQuestions(i),u=i[n[0]],c=o.process("{{questionPrompt}}")+u.country;a+=c;t({speechOutput:c,repromptText:c,currentQuestionIndex:0,correctAnswer:u.capital,questions:n,score:0},r.buildSpeechletResponse("Capital knowledge",a,c,!1))}},function(t,a,n){!function(a,n){t.exports=n()}(0,function(){return function(t){function a(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return t[e].call(r.exports,r,r.exports,a),r.l=!0,r.exports}var n={};return a.m=t,a.c=n,a.d=function(t,n,e){a.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:e})},a.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(n,"a",n),n},a.o=function(t,a){return Object.prototype.hasOwnProperty.call(t,a)},a.p="",a(a.s=1)}([function(t,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=function(){function t(t,a){for(var n=0;n<a.length;n++){var e=a[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(a,n,e){return n&&t(a.prototype,n),e&&t(a,e),a}}(),r=function(){function t(a,n,e){!function(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t),this.type=a,this.data=n,this.raw=e}return e(t,[{key:"convert",value:function(t){switch(this.type){case"splain":var a=t.getEntry(this.data,!1);return null!==a&&Array.isArray(a)?a[Math.floor(Math.random()*a.length)]:null;case"blank":return" ";case"lit":return this.data;default:return}}}]),t}();a.default=r},function(t,a,n){"use strict";var e=function(t){return t&&t.__esModule?t:{default:t}}(n(2));t.exports=new e.default},function(t,a,n){"use strict";function e(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(a,"__esModule",{value:!0});var r=function(){function t(t,a){for(var n=0;n<a.length;n++){var e=a[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(a,n,e){return n&&t(a.prototype,n),e&&t(a,e),a}}(),i=e(n(3)),o=e(n(4)),u=e(n(5)),c=e(n(6)),l=e(n(7)),s=function(){function t(){!function(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t),this.dictionary=new i.default,this.dictionary.addEntry(o.default)}return r(t,[{key:"addEntry",value:function(t,a){this.dictionary.addEntry(t,a)}},{key:"process",value:function(t,a){var n=this;return u.default.getTemplates(t).forEach(function(e){if(e=u.default.stripTemplate(e),u.default.containsTemplate(e)){var r=""+n.process(e,!0);t=t.replace(e,r),e=""+r}var i=l.default.run(c.default.getTokens(e),n.dictionary);a&&(i="'"+i+"'"),t=t.replace("{{"+e+"}}",i)}),null!==u.default.containsTemplate(t)&&(t=this.process(t)),t}}]),t}();a.default=s},function(t,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r=function(){function t(t,a){for(var n=0;n<a.length;n++){var e=a[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(a,n,e){return n&&t(a.prototype,n),e&&t(a,e),a}}(),i=function(){function t(){!function(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t),this.entries={}}return r(t,[{key:"addEntry",value:function(t,a){var n=this;a?this.entries[a]=t:Object.keys(t).forEach(function(a){n.addEntry(t[a],a)})}},{key:"getEntry",value:function(t,a){if("undefined"===(void 0===a?"undefined":e(a))&&(a=!0),!t.includes("."))return this.entries[t];var n=t.split(".").reduce(function(t,n){if(null===t)return null;var e=t[n];return e||(a?null:t)},this.entries);return a&&!1===Array.isArray(n)?(console.warn("entry was not found explicitly or was not array, make sure entry is valid or call with explicit off "),null):n}}]),t}();a.default=i},function(t,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.default={weather:{rain:["drizzling","showering","raining","spitting"],sun:["sunny","warm","bright"]},speed:{fast:["fast","upbeat","quick"],slow:["slow","creep"]}}},function(t,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=function(){function t(t,a){for(var n=0;n<a.length;n++){var e=a[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(a,n,e){return n&&t(a.prototype,n),e&&t(a,e),a}}(),r=/{{.*?}}/g,i=function(){function t(){!function(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t)}return e(t,null,[{key:"getTemplates",value:function(t){for(var a=[];t.includes("{{")&&t.includes("}}");)for(var n=t.indexOf("{{"),e=0,r=n+2;r<t.length-1;r++)t[r]+t[r+1]==="{{"&&e++,t[r]+t[r+1]==="}}"&&(e>0?(e--,r+=1):(a.push(t.substring(n,r+2)),r=(t=t.slice(0,n)+t.slice(r+2)).length));return a}},{key:"stripTemplate",value:function(t){var a=t.indexOf("{{"),n=t.lastIndexOf("}}")-2;return a>-1&&(t=t.slice(0,a)+t.slice(a+2)),n>-1&&(t=t.slice(0,n)+t.slice(n+2)),t}},{key:"containsTemplate",value:function(t){return t.match(r)}}]),t}();a.default=i},function(t,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=function(){function t(t,a){for(var n=0;n<a.length;n++){var e=a[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(a,n,e){return n&&t(a.prototype,n),e&&t(a,e),a}}(),r=function(t){return t&&t.__esModule?t:{default:t}}(n(0)),i=/[?'"|\s]/,o=function(){function t(){!function(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t)}return e(t,null,[{key:"getTokens",value:function(t){for(var a=[],n=1e5;t;){n--;var e=this.findNextToken(t);if(a.push(e),t=t.slice(e.raw.length),n<0){console.warn("couldn't finish processing tokens after 100,000 panicking..");break}}return a}},{key:"findNextToken",value:function(t){var a=1;if("?"===t[0]){for(;!isNaN(t[a])&&" "!==t[a]&&a<t.length;a++);return new r.default("?",t.substring(1,a)||"2",t.substring(0,a))}if("|"===t[0])return new r.default("|",null,"|");if(" "===t[0]||"\n"===t[0])return new r.default("blank",null,t[0]);if("'"===t[0]||'"'===t[0]){for(;"'"!==t[a]&&'"'!==t[a]&&a<t.length;a++);return new r.default("lit",t.substring(1,a),t.substring(0,a+1))}var n=t.search(i);return n<0&&(n=t.length),new r.default("splain",t.substring(0,n),t.substring(0,n))}}]),t}();a.default=o},function(t,a,n){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var e=function(){function t(t,a){for(var n=0;n<a.length;n++){var e=a[n];e.enumerable=e.enumerable||!1,e.configurable=!0,"value"in e&&(e.writable=!0),Object.defineProperty(t,e.key,e)}}return function(a,n,e){return n&&t(a.prototype,n),e&&t(a,e),a}}(),r=(function(t){t&&t.__esModule}(n(0)),function(){function t(){!function(t,a){if(!(t instanceof a))throw new TypeError("Cannot call a class as a function")}(this,t)}return e(t,null,[{key:"run",value:function(t,a){this.executeOrs(t),this.executeConditionals(t);var n="";return t.forEach(function(t){n+=t.convert(a)}),n}},{key:"executeConditionals",value:function(t){for(;null!==this.findFirstTokenOfType("?",t);){var a=this.findFirstTokenOfType("?",t);if(null===a)break;if(1!==this.rand(t[a].data)){var n=this.getPreceedingTokenOfType(["lit","splain"],t,a);t.splice(n,a-n+1)}else t.splice(a,1)}}},{key:"executeOrs",value:function(t){for(;null!==this.findFirstTokenOfType("|",t);){var a=this.findFirstTokenOfType("|",t);if(null===a)break;var n=this.getPreceedingTokenOfType(["lit","splain"],t,a),e=this.getProceedingTokenOfType(["lit","splain"],t,a);if(null!==n&&null!==e){1===this.rand(2)?t.splice(n,a-n+1):(e+1<t.length&&"?"===t[e+1].type&&e++,t.splice(a,e-a+1))}else t.splice(a,1)}}},{key:"findFirstTokenOfType",value:function(t,a){for(var n=0;n<a.length;n++)if(a[n].type===t)return n;return null}},{key:"getPreceedingTokenOfType",value:function(t,a,n){if(0===n)return null;for(var e=n-1;e>=0;e--)if(t.indexOf(a[e].type)>-1)return e;return null}},{key:"getProceedingTokenOfType",value:function(t,a,n){if(n===a.length-1)return null;for(var e=n+1;e<a.length;e++)if(t.indexOf(a[e].type)>-1)return e;return null}},{key:"rand",value:function(t){return Math.floor(Math.random()*t)+1}}]),t}());a.default=r}])})},function(t,a){t.exports={countries:[{country:"Afghanistan",capital:"Kabul"},{country:"Albania",capital:"Tirana"},{country:"Algeria",capital:"Algiers"},{country:"American Samoa",capital:"Pago Pago"},{country:"Andorra",capital:"Andorra la Vella"},{country:"Angola",capital:"Luanda"},{country:"Anguilla",capital:"The Valley"},{country:"Antigua and Barbuda",capital:"St Johns"},{country:"Argentina",capital:"Buenos Aires"},{country:"Armenia",capital:"Yerevan"},{country:"Aruba",capital:"Oranjestad"},{country:"Australia",capital:"Canberra"},{country:"Austria",capital:"Vienna"},{country:"Azerbaijan",capital:"Baku"},{country:"Bahamas",capital:"Nassau"},{country:"Bahrain",capital:"Manama"},{country:"Bangladesh",capital:"Dhaka"},{country:"Barbados",capital:"Bridgetown"},{country:"Belarus",capital:"Minsk"},{country:"Belgium",capital:"Brussels"},{country:"Belize",capital:"Belmopan"},{country:"Benin",capital:"Porto Novo"},{country:"Bermuda",capital:"Hamilton"},{country:"Bhutan",capital:"Thimphu"},{country:"Bolivia",capital:"Sucre"},{country:"Bosnia and Herzegovina",capital:"Sarajevo"},{country:"Botswana",capital:"Gaborone"},{country:"Brazil",capital:"Brasilia"},{country:"Brunei",capital:"Bandar Seri Begawan"},{country:"Bulgaria",capital:"Sofia"},{country:"Burundi",capital:"Bujumbura"},{country:"Cambodia",capital:"Phnom Penh"},{country:"Cameroon",capital:"Yaounde"},{country:"Canada",capital:"Ottawa"},{country:"Cape Verde",capital:"Praia"},{country:"Cayman Islands",capital:"George Town"},{country:"Central African Republic",capital:"Bangui"},{country:"Chad",capital:"NDjamena"},{country:"Chile",capital:"Santiago"},{country:"China",capital:"Beijing"},{country:"Christmas Island",capital:"Flying Fish Cove"},{country:"Colombia",capital:"Bogota"},{country:"Comoros",capital:"Moroni"},{country:"Cook Islands",capital:"Avarua"},{country:"Costa Rica",capital:"San Jose"},{country:"Croatia",capital:"Zagreb"},{country:"Cuba",capital:"Havana"},{country:"Curacao",capital:"Willemstad"},{country:"Cyprus",capital:"Nicosia"},{country:"Czech Republic",capital:"Prague"},{country:"Ivory coast",capital:"Yamoussoukro"},{country:"Democratic Republic of the Congo",capital:"Kinshasa"},{country:"Denmark",capital:"Copenhagen"},{country:"Djibouti",capital:"Djibouti"},{country:"Dominica",capital:"Roseau"},{country:"Dominican Republic",capital:"Santo Domingo"},{country:"East Timor",capital:"Dili"},{country:"Easter Island",capital:"Hanga Roa"},{country:"Ecuador",capital:"Quito"},{country:"Egypt",capital:"Cairo"},{country:"El Salvador",capital:"San Salvador"},{country:"Equatorial Guinea",capital:"Malabo"},{country:"Eritrea",capital:"Asmara"},{country:"Estonia",capital:"Tallinn"},{country:"Ethiopia",capital:"Addis Ababa"},{country:"Federated States of Micronesia",capital:"Palikir"},{country:"Fiji",capital:"Suva"},{country:"Finland",capital:"Helsinki"},{country:"France",capital:"Paris"},{country:"French Guiana",capital:"Cayenne"},{country:"French Polynesia",capital:"Papeete"},{country:"Gabon",capital:"Libreville"},{country:"Gambia",capital:"Banjul"},{country:"Georgia",capital:"Tbilisi"},{country:"Germany",capital:"Berlin"},{country:"Ghana",capital:"Accra"},{country:"Gibraltar",capital:"Gibraltar"},{country:"Greece",capital:"Athens"},{country:"Greenland",capital:"Nuuk"},{country:"Grenada",capital:"Saint Georges"},{country:"Guam",capital:"Hagatna"},{country:"Guatemala",capital:"Guatemala City"},{country:"Guinea",capital:"Conakry"},{country:"Guinea-Bissau",capital:"Bissau"},{country:"Guyana",capital:"Georgetown"},{country:"Haiti",capital:"Port au Prince"},{country:"Honduras",capital:"Tegucigalpa"},{country:"Hungary",capital:"Budapest"},{country:"Iceland",capital:"Reykjavik"},{country:"India",capital:"New Delhi"},{country:"Indonesia",capital:"Jakarta"},{country:"Iran",capital:"Tehran"},{country:"Iraq",capital:"Baghdad"},{country:"Ireland",capital:"Dublin"},{country:"Israel",capital:"Jerusalem"},{country:"Italy",capital:"Rome"},{country:"Jamaica",capital:"Kingston"},{country:"Japan",capital:"Tokyo"},{country:"Jordan",capital:"Amman"},{country:"Kazakhstan",capital:"Astana"},{country:"Kenya",capital:"Nairobi"},{country:"Kiribati",capital:"Tarawa"},{country:"Kosovo",capital:"Pristina"},{country:"Kuwait",capital:"Kuwait City"},{country:"Kyrgyzstan",capital:"Bishkek"},{country:"Laos",capital:"Vientiane"},{country:"Latvia",capital:"Riga"},{country:"Lebanon",capital:"Beirut"},{country:"Lesotho",capital:"Maseru"},{country:"Liberia",capital:"Monrovia"},{country:"Libya",capital:"Tripoli"},{country:"Liechtenstein",capital:"Vaduz"},{country:"Lithuania",capital:"Vilnius"},{country:"Luxembourg",capital:"Luxembourg"},{country:"Macedonia",capital:"Skopje"},{country:"Madagascar",capital:"Antananarivo"},{country:"Malawi",capital:"Lilongwe"},{country:"Malaysia",capital:"Kuala Lumpur"},{country:"Maldives",capital:"Male"},{country:"Mali",capital:"Bamako"},{country:"Malta",capital:"Valletta"},{country:"Marshall Islands",capital:"Majuro"},{country:"Mauritania",capital:"Nouakchott"},{country:"Mauritius",capital:"Port Louis"},{country:"Mexico",capital:"Mexico City"},{country:"Moldova",capital:"Chisinau"},{country:"Monaco",capital:"Monaco"},{country:"Mongolia",capital:"Ulaanbaatar"},{country:"Montenegro",capital:"Podgorica"},{country:"Morocco",capital:"Rabat"},{country:"Mozambique",capital:"Maputo"},{country:"Myanmar",capital:"Naypyidaw"},{country:"Namibia",capital:"Windhoek"},{country:"Nauru",capital:"Yaren"},{country:"Nepal",capital:"Kathmandu"},{country:"Netherlands",capital:"Amsterdam"},{country:"New Caledonia",capital:"Noumea"},{country:"New Zealand",capital:"Wellington"},{country:"Nicaragua",capital:"Managua"},{country:"Nigeria",capital:"Abuja"},{country:"Niue",capital:"Alofi"},{country:"North Korea",capital:"Pyongyang"},{country:"United Kingdom Northern Ireland",capital:"Belfast"},{country:"Northern Mariana Islands",capital:"Saipan"},{country:"Norway",capital:"Oslo"},{country:"Oman",capital:"Muscat"},{country:"Pakistan",capital:"Islamabad"},{country:"Palau",capital:"Ngerulmud"},{country:"Panama",capital:"Panama City"},{country:"Papua New Guinea",capital:"Port Moresby"},{country:"Paraguay",capital:"Asuncion"},{country:"Peru",capital:"Lima"},{country:"Philippines",capital:"Manila"},{country:"Poland",capital:"Warsaw"},{country:"Portugal",capital:"Lisbon"},{country:"Puerto Rico",capital:"San Juan"},{country:"Qatar",capital:"Doha"},{country:"Taiwan",capital:"Taipei"},{country:"Republic of the Congo",capital:"Brazzaville"},{country:"Romania",capital:"Bucharest"},{country:"Russia",capital:"Moscow"},{country:"Rwanda",capital:"Kigali"},{country:"Saint Barts",capital:"Gustavia"},{country:"Saint Helena",capital:"Jamestown"},{country:"Saint Kitts and Nevis",capital:"Basseterre"},{country:"Saint Lucia",capital:"Castries"},{country:"Saint Martin",capital:"Marigot"},{country:"Saint Pierre and Miquelon",capital:"saint Pierre"},{country:"Saint Vincent and the Grenadines",capital:"Kingstown"},{country:"Samoa",capital:"Apia"},{country:"San Marino",capital:"San Marino"},{country:"Saudi Arabia",capital:"Riyadh"},{country:"Scotland",capital:"Edinburgh"},{country:"Senegal",capital:"Dakar"},{country:"Serbia",capital:"Belgrade"},{country:"Seychelles",capital:"Victoria"},{country:"Sierra Leone",capital:"Freetown"},{country:"Singapore",capital:"Singapore"},{country:"Slovakia",capital:"Bratislava"},{country:"Slovenia",capital:"Ljubljana"},{country:"Solomon Islands",capital:"Honiara"},{country:"Somalia",capital:"Mogadishu"},{country:"Somaliland",capital:"Hargeisa"},{country:"South Africa",capital:"Pretoria"},{country:"South Korea",capital:"Seoul"},{country:"South Sudan",capital:"Juba"},{country:"Spain",capital:"Madrid"},{country:"Sri Lanka",capital:"Sri Jayawardenapura Kotte"},{country:"Sudan",capital:"Khartoum"},{country:"Suriname",capital:"Paramaribo"},{country:"Swaziland",capital:"Mbabane"},{country:"Sweden",capital:"Stockholm"},{country:"Switzerland",capital:"Bern"},{country:"Syria",capital:"Damascus"},{country:"Sao Tome and Principe",capital:"Sao Tome"},{country:"Tajikistan",capital:"Dushanbe"},{country:"Tanzania",capital:"Dodoma"},{country:"Thailand",capital:"Bangkok"},{country:"Togo",capital:"Lome"},{country:"Tonga",capital:"Nukualofa"},{country:"Trinidad and Tobago",capital:"Port of Spain"},{country:"Tunisia",capital:"Tunis"},{country:"Turkey",capital:"Ankara"},{country:"Tuvalu",capital:"Funafuti"},{country:"Uganda",capital:"Kampala"},{country:"Ukraine",capital:"Kiev"},{country:"United Arab Emirates",capital:"Abu Dhabi"},{country:"The United Kingdom",capital:"London"},{country:"The United States",capital:"Washington D.C."},{country:"Uruguay",capital:"Montevideo"},{country:"Uzbekistan",capital:"Tashkent"},{country:"Vanuatu",capital:"Port Vila"},{country:"Vatican City",capital:"Vatican City"},{country:"Venezuela",capital:"Caracas"},{country:"Vietnam",capital:"Hanoi"},{country:"Wales",capital:"Cardiff"},{country:"Western Sahara",capital:"El Aaiun"},{country:"Yemen",capital:"Sana"},{country:"Zambia",capital:"Lusaka"},{country:"Zimbabwe",capital:"Harare"}]}},function(t,a,n){let e=n(0),r=n(1),i=n(6);n(11),a.handler=function(t,a){try{"LaunchRequest"===t.request.type?r((t,n)=>{a.succeed(e.buildResponse(t,n))}):"IntentRequest"===t.request.type?i(t.request,t.session,function(t,n){a.succeed(e.buildResponse(t,n))}):"SessionEndedRequest"===t.request.type&&a.succeed()}catch(t){a.fail("Exception: "+t)}}},function(t,a){t.exports={populateGameQuestions:function(t){let a,n,e=t.length,r=[];for(let a=0;a<t.length;a++)r.push(a);for(;0!==e;)n=Math.floor(Math.random()*e),a=r[e-=1],r[e]=r[n],r[n]=a;return r}}},function(t,a,n){let e=n(1),r=n(7),i=n(8),o=n(9),u=n(10);t.exports=function(t,a,n){let c=t.intent,l=t.intent.name;a.attributes&&a.attributes.userPromptedToContinue?(delete a.attributes.userPromptedToContinue,"AMAZON.NoIntent"===l?r(c,a,n):"AMAZON.YesIntent"===l&&i(c,a,n)):a.attributes&&a.attributes.playAgain?(delete a.attributes.playAgain,"AMAZON.NoIntent"===l?r(c,a,n):"AMAZON.YesIntent"===l&&e(n)):["AnswerIntent","AnswerOnlyIntent","DontKnowIntent","AMAZON.YesIntent","AMAZON.NoIntent"].indexOf(l)>0?u(c,a,n):"AMAZON.StartOverIntent"===l?e(n):"AMAZON.RepeatIntent"===l?i(c,a,n):"AMAZON.HelpIntent"===l?o(c,a,n):"AMAZON.StopIntent"===l?r(c,a,n):"AMAZON.CancelIntent"===l&&r(c,a,n)}},function(t,a,n){let e=n(0);t.exports=function(t,a,n){n(a.attributes,e.buildSpeechletResponseWithoutCard("Thanks for playing capital knowledge.","",!0))}},function(t,a,n){let e=n(0),r=n(1);t.exports=function(t,a,n){a.attributes&&a.attributes.speechOutput?n(a.attributes,e.buildSpeechletResponseWithoutCard(a.attributes.speechOutput,a.attributes.repromptText,!1)):r(n)}},function(t,a,n){let e=n(0);t.exports=function(t,a,n){a.attributes?a.attributes.userPromptedToContinue=!0:a.attributes={userPromptedToContinue:!0};n(a.attributes,e.buildSpeechletResponseWithoutCard("To start a new game at any time, say, start new game. To repeat the last question, say, repeat. Would you like to keep playing?","Would you like to keep playing?",!1))}},function(t,a,n){let e=n(0);const r=n(3).countries;let i=n(2);t.exports=function(t,a,n){let o="",u={};if(a.attributes&&a.attributes.questions){let c=a.attributes.questions,l=a.attributes.correctAnswer,s=parseInt(a.attributes.score),p=parseInt(a.attributes.currentQuestionIndex);if(t.slots&&t.slots.Answer&&t.slots.Answer.value.toUpperCase()===l.toUpperCase()){s++,o=i.process("{{{{congrats ','}}?2}} that is {{correct}}. "),p===r.length-1&&(o+="You got every capital correct! congratulations and thanks for playing!",n(a.attributes,e.buildSpeechletResponse("Capital Knowledge",o,"",!0)));let t=r[c[p+=1]],y=i.process("{{questionPrompt}}")+t.country;l=t.capital,n(u={speechOutput:o+=i.process(`{{score.active}}  ${s.toString()}. `)+y,repromptText:y,currentQuestionIndex:p,correctAnswer:l,questions:c,score:s},e.buildSpeechletResponse("Capital Knowledge",o,y,!1))}else o+=i.process(`{{onWrong.reply}} {{onWrong.correctReveal}} is ${l}. `),o+=i.process(`{{score.end}} ${a.attributes.score}. `),o+=i.process("{{again.question}} {{again.action}}?"),a.attributes.playAgain=!0,n(a.attributes,e.buildSpeechletResponse("Capital Knowledge",o,"",!1))}else u.userPromptedToContinue=!0,o="There is no game in progress. Do you want to start a new game? ",n(u,e.buildSpeechletResponse("Capital Knowledge",o,o,!1))}},function(t,a,n){n(2).addEntry({greeting:["hello","howdy","hey","hi","welcome","greetings"],welcomeMsg:["{{callToAction}} Capital Knowledge","heres your first question","lets begin","lets start with"],callToAction:["lets play","its time for","get ready for","lets test your","lets begin"],questionPrompt:["{{question.enquiry question.capital question.in}} "],question:{enquiry:["do you know ","what is","where is","which city is","which place is","whats","wheres"],capital:["the capital","the capital city"],in:["in","of"]},onWrong:{reply:["{{onWrong.apology?2}} {{onWrong.pronoun}} {{onWrong.answerNoun}} is {{'sadly'?3}} {{onWrong.wrong}}."],apology:["sorry","I'm sorry","unfortunately","sadly","unlucky,","sadly","regrettably"],pronoun:["that","your","the"],answerNoun:["answer","guess","capital"],wrong:["wrong","incorrect","not correct","not right","not the answer","erroneous","inaccurate","mistaken","false"],correctReveal:["the correct answer","the correct capital","the correct place","the answer you are looking for","the answer","the actual capital","it"]},score:{end:["you scored","you answered","your total is","you got","{{score.both}}"],active:["{{score.both}}","your on","your up to","that makes it"],both:["your score is","your total is"]},again:{question:["would you like to","care to","want to"],action:["play again","try again","give it another go","try and beat your high score","play another round","play some more"]},correct:["correct","perfect","exactly right"],congrats:["well done","amazing","congratulations","yes","well played"]})}]);