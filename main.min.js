module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 4);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

function buildSpeechletResponse(title, output, repromptText, shouldEndSession) {
    return {
        outputSpeech: {
            type: "PlainText",
            text: output
        },
        card: {
            type: "Simple",
            title: title,
            content: output
        },
        reprompt: {
            outputSpeech: {
                type: "PlainText",
                text: repromptText
            }
        },
        shouldEndSession: shouldEndSession
    };
}

function buildSpeechletResponseWithoutCard(output, repromptText, shouldEndSession) {
    return {
        outputSpeech: {
            type: "PlainText",
            text: output
        },
        reprompt: {
            outputSpeech: {
                type: "PlainText",
                text: repromptText
            }
        },
        shouldEndSession: shouldEndSession
    };
}

function buildResponse(sessionAttributes, speechletResponse) {
    return {
        version: "1.0",
        sessionAttributes: sessionAttributes,
        response: speechletResponse
    };
}

module.exports = {
    buildResponse,
    buildSpeechletResponse,
    buildSpeechletResponseWithoutCard
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

let gameController = __webpack_require__(5);
let responseHelper = __webpack_require__(0);
const capitalPairs = __webpack_require__(3).countries;
let Splain = __webpack_require__(2);



module.exports = function getWelcomeResponse(callback) {
        let speechOutput = Splain.process("{{{{greeting '.'}}?2}} {{welcomeMsg}}. "),
        shouldEndSession = false,
        gameQuestions = gameController.populateGameQuestions(capitalPairs),
        currentQuestionIndex = 0,
        currentCapital = capitalPairs[gameQuestions[currentQuestionIndex]],
        spokenQuestion = Splain.process("{{questionPrompt}}")  + currentCapital.country,
        correctAnswer = currentCapital.capital;

    speechOutput += spokenQuestion;
    let sessionAttributes = {
        "speechOutput": spokenQuestion,
        "repromptText": spokenQuestion,
        "currentQuestionIndex": currentQuestionIndex,
        "correctAnswer": correctAnswer,
        "questions": gameQuestions,
        "score": 0,
    };

    callback(sessionAttributes,
        responseHelper.buildSpeechletResponse("Capital knowledge", speechOutput, spokenQuestion, shouldEndSession));
};




/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

(function webpackUniversalModuleDefinition(root, factory) {
	if(true)
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Splain", [], factory);
	else if(typeof exports === 'object')
		exports["Splain"] = factory();
	else
		root["Splain"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 1);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Token = function () {
    function Token(type, data, raw) {
        _classCallCheck(this, Token);

        this.type = type;
        this.data = data;
        this.raw = raw;
    }

    _createClass(Token, [{
        key: 'convert',
        value: function convert(dictionary) {
            switch (this.type) {
                case 'splain':
                    var entry = dictionary.getEntry(this.data, false);
                    if (entry !== null && Array.isArray(entry)) {
                        return entry[Math.floor(Math.random() * entry.length)];
                    }
                    return null;
                    break;
                case 'blank':
                    return " ";
                case 'lit':
                    return this.data;
                default:
                    return undefined;
            }
        }
    }]);

    return Token;
}();

exports.default = Token;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _splain = __webpack_require__(2);

var _splain2 = _interopRequireDefault(_splain);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = new _splain2.default();

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _dictionary = __webpack_require__(3);

var _dictionary2 = _interopRequireDefault(_dictionary);

var _defaultDictionaries = __webpack_require__(4);

var _defaultDictionaries2 = _interopRequireDefault(_defaultDictionaries);

var _templateFinder = __webpack_require__(5);

var _templateFinder2 = _interopRequireDefault(_templateFinder);

var _templateProcessor = __webpack_require__(6);

var _templateProcessor2 = _interopRequireDefault(_templateProcessor);

var _templateExecutor = __webpack_require__(7);

var _templateExecutor2 = _interopRequireDefault(_templateExecutor);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Splain = function () {
    function Splain() {
        _classCallCheck(this, Splain);

        this.dictionary = new _dictionary2.default();
        this.dictionary.addEntry(_defaultDictionaries2.default);
    }

    _createClass(Splain, [{
        key: "addEntry",
        value: function addEntry(JSON, name) {
            this.dictionary.addEntry(JSON, name);
        }
    }, {
        key: "process",
        value: function process(text, addQuotes) {
            var _this = this;

            var templates = _templateFinder2.default.getTemplates(text);
            templates.forEach(function (template) {
                template = _templateFinder2.default.stripTemplate(template);
                if (_templateFinder2.default.containsTemplate(template)) {
                    var output = "" + _this.process(template, true);
                    text = text.replace(template, output);
                    template = "" + output;
                }
                var compiledTemplate = _templateExecutor2.default.run(_templateProcessor2.default.getTokens(template), _this.dictionary);
                if (addQuotes) compiledTemplate = "'" + compiledTemplate + "'";
                text = text.replace("{{" + template + "}}", compiledTemplate);
            });

            if (_templateFinder2.default.containsTemplate(text) !== null) text = this.process(text);
            return text;
        }
    }]);

    return Splain;
}();

exports.default = Splain;

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Dictioanry = function () {
    function Dictioanry() {
        _classCallCheck(this, Dictioanry);

        this.entries = {};
    }

    _createClass(Dictioanry, [{
        key: "addEntry",
        value: function addEntry(JSONEntry, name) {
            var _this = this;

            if (name) {
                this.entries[name] = JSONEntry;
            } else {
                Object.keys(JSONEntry).forEach(function (key) {
                    _this.addEntry(JSONEntry[key], key);
                });
            }
        }
    }, {
        key: "getEntry",
        value: function getEntry(name, explicit) {
            if ((typeof explicit === "undefined" ? "undefined" : _typeof(explicit)) === ( true ? "undefined" : _typeof(undefined))) explicit = true;
            if (!name.includes(".")) {
                return this.entries[name];
            }

            var path = name.split(".");

            var entry = path.reduce(function (currentStep, nextStep) {
                if (currentStep === null) return null;
                var curObj = currentStep[nextStep];
                if (curObj) {
                    return curObj;
                } else {
                    if (!explicit) return currentStep;else {
                        return null;
                    }
                }
            }, this.entries);
            if (explicit && Array.isArray(entry) === false) {
                console.warn("entry was not found explicitly or was not array, make sure entry is valid or call with explicit off ");
                return null;
            }

            return entry;
        }
    }]);

    return Dictioanry;
}();

exports.default = Dictioanry;

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = {
  "weather": {
    "rain": ["drizzling", "showering", "raining", "spitting"],
    "sun": ["sunny", "warm", "bright"]
  },
  "speed": {
    "fast": ["fast", "upbeat", "quick"],
    "slow": ["slow", "creep"]
  }
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var regTemplateMatcher = /{{.*?}}/g;

var _class = function () {
    function _class() {
        _classCallCheck(this, _class);
    }

    _createClass(_class, null, [{
        key: "getTemplates",
        value: function getTemplates(text) {
            var templates = [];
            while (text.includes("{{") && text.includes("}}")) {
                var start = text.indexOf("{{"),
                    nested = 0;
                //start +2 to skip  initial brackets
                for (var i = start + 2; i < text.length - 1; i++) {
                    if (text[i] + text[i + 1] === "{{") {
                        nested++;
                    }
                    if (text[i] + text[i + 1] === "}}") {
                        if (nested > 0) {
                            nested--;
                            i += 1; //skip over the other nested '}'
                        } else {
                            templates.push(text.substring(start, i + 2));
                            text = text.slice(0, start) + text.slice(i + 2);
                            i = text.length;
                        }
                    }
                }
            }
            return templates;
        }
    }, {
        key: "stripTemplate",
        value: function stripTemplate(template) {
            var open = template.indexOf("{{"),
                close = template.lastIndexOf("}}") - 2;
            if (open > -1) template = template.slice(0, open) + template.slice(open + 2);
            if (close > -1) template = template.slice(0, close) + template.slice(close + 2);
            return template;
        }
    }, {
        key: "containsTemplate",
        value: function containsTemplate(text) {
            return text.match(regTemplateMatcher);
        }
    }]);

    return _class;
}();

exports.default = _class;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _splainToken = __webpack_require__(0);

var _splainToken2 = _interopRequireDefault(_splainToken);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var regToken = /[?'"|\s]/;

var _class = function () {
    function _class() {
        _classCallCheck(this, _class);
    }

    _createClass(_class, null, [{
        key: "getTokens",
        value: function getTokens(template) {
            var tokens = [];
            var n = 100000;
            while (template) {
                n--;
                var nextToken = this.findNextToken(template);
                tokens.push(nextToken);
                template = template.slice(nextToken.raw.length);
                if (n < 0) {
                    console.warn("couldn't finish processing tokens after 100,000 panicking..");
                    break;
                }
            }

            return tokens;
        }
    }, {
        key: "findNextToken",
        value: function findNextToken(template) {
            var n = 1;
            if (template[0] === "?") {
                for (; !isNaN(template[n]) && template[n] !== " " && n < template.length; n++) {}
                return new _splainToken2.default("?", template.substring(1, n) || "2", template.substring(0, n));
            }
            if (template[0] === "|") {
                return new _splainToken2.default("|", null, "|");
            }
            if (template[0] === " " || template[0] === "\n") {
                return new _splainToken2.default("blank", null, template[0]);
            }
            if (template[0] === "'" || template[0] === '"') {
                for (; template[n] !== "'" && template[n] !== '"' && n < template.length; n++) {}
                return new _splainToken2.default("lit", template.substring(1, n), template.substring(0, n + 1));
            }
            var nextToken = template.search(regToken);
            if (nextToken < 0) nextToken = template.length;
            return new _splainToken2.default("splain", template.substring(0, nextToken), template.substring(0, nextToken));
        }
    }]);

    return _class;
}();

exports.default = _class;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _splainToken = __webpack_require__(0);

var _splainToken2 = _interopRequireDefault(_splainToken);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _class = function () {
    function _class() {
        _classCallCheck(this, _class);
    }

    _createClass(_class, null, [{
        key: "run",
        value: function run(tokens, dictionary) {
            this.executeOrs(tokens);
            this.executeConditionals(tokens);
            var retString = "";
            tokens.forEach(function (token) {
                retString += token.convert(dictionary);
            });

            return retString;
        }
    }, {
        key: "executeConditionals",
        value: function executeConditionals(tokens) {
            while (this.findFirstTokenOfType("?", tokens) !== null) {
                var conditionalIndex = this.findFirstTokenOfType("?", tokens);
                if (conditionalIndex !== null) {
                    if (this.rand(tokens[conditionalIndex].data) !== 1) {
                        var target = this.getPreceedingTokenOfType(["lit", "splain"], tokens, conditionalIndex);
                        tokens.splice(target, conditionalIndex - target + 1);
                    } else {
                        tokens.splice(conditionalIndex, 1);
                    }
                } else {
                    break;
                }
            }
        }
    }, {
        key: "executeOrs",
        value: function executeOrs(tokens) {
            while (this.findFirstTokenOfType("|", tokens) !== null) {
                var indexOfOr = this.findFirstTokenOfType("|", tokens);
                if (indexOfOr !== null) {
                    var prec = this.getPreceedingTokenOfType(["lit", "splain"], tokens, indexOfOr),
                        proc = this.getProceedingTokenOfType(["lit", "splain"], tokens, indexOfOr);

                    if (prec !== null && proc !== null) {
                        var side = this.rand(2);
                        if (side === 1) //remove left
                            {
                                tokens.splice(prec, indexOfOr - prec + 1);
                            } else {
                            if (proc + 1 < tokens.length && tokens[proc + 1].type === "?") proc++;
                            tokens.splice(indexOfOr, proc - indexOfOr + 1);
                        }
                    } else tokens.splice(indexOfOr, 1);
                } else {
                    break;
                }
            }
        }
    }, {
        key: "findFirstTokenOfType",
        value: function findFirstTokenOfType(type, tokens) {
            for (var i = 0; i < tokens.length; i++) {
                if (tokens[i].type === type) return i;
            }
            return null;
        }
    }, {
        key: "getPreceedingTokenOfType",
        value: function getPreceedingTokenOfType(types, tokens, index) {
            if (index === 0) return null;
            for (var i = index - 1; i >= 0; i--) {
                if (types.indexOf(tokens[i].type) > -1) return i;
            }
            return null;
        }
    }, {
        key: "getProceedingTokenOfType",
        value: function getProceedingTokenOfType(types, tokens, index) {
            if (index === tokens.length - 1) return null;
            for (var i = index + 1; i < tokens.length; i++) {
                if (types.indexOf(tokens[i].type) > -1) return i;
            }
            return null;
        }

        //random number between 1 and n inclusive

    }, {
        key: "rand",
        value: function rand(n) {
            return Math.floor(Math.random() * n) + 1;
        }
    }]);

    return _class;
}();

exports.default = _class;

/***/ })
/******/ ]);
});

/***/ }),
/* 3 */
/***/ (function(module, exports) {

module.exports = {"countries":[{"country":"Afghanistan","capital":"Kabul"},{"country":"Albania","capital":"Tirana"},{"country":"Algeria","capital":"Algiers"},{"country":"American Samoa","capital":"Pago Pago"},{"country":"Andorra","capital":"Andorra la Vella"},{"country":"Angola","capital":"Luanda"},{"country":"Anguilla","capital":"The Valley"},{"country":"Antigua and Barbuda","capital":"St Johns"},{"country":"Argentina","capital":"Buenos Aires"},{"country":"Armenia","capital":"Yerevan"},{"country":"Aruba","capital":"Oranjestad"},{"country":"Australia","capital":"Canberra"},{"country":"Austria","capital":"Vienna"},{"country":"Azerbaijan","capital":"Baku"},{"country":"Bahamas","capital":"Nassau"},{"country":"Bahrain","capital":"Manama"},{"country":"Bangladesh","capital":"Dhaka"},{"country":"Barbados","capital":"Bridgetown"},{"country":"Belarus","capital":"Minsk"},{"country":"Belgium","capital":"Brussels"},{"country":"Belize","capital":"Belmopan"},{"country":"Benin","capital":"Porto Novo"},{"country":"Bermuda","capital":"Hamilton"},{"country":"Bhutan","capital":"Thimphu"},{"country":"Bolivia","capital":"Sucre"},{"country":"Bosnia and Herzegovina","capital":"Sarajevo"},{"country":"Botswana","capital":"Gaborone"},{"country":"Brazil","capital":"Brasilia"},{"country":"Brunei","capital":"Bandar Seri Begawan"},{"country":"Bulgaria","capital":"Sofia"},{"country":"Burundi","capital":"Bujumbura"},{"country":"Cambodia","capital":"Phnom Penh"},{"country":"Cameroon","capital":"Yaounde"},{"country":"Canada","capital":"Ottawa"},{"country":"Cape Verde","capital":"Praia"},{"country":"Cayman Islands","capital":"George Town"},{"country":"Central African Republic","capital":"Bangui"},{"country":"Chad","capital":"NDjamena"},{"country":"Chile","capital":"Santiago"},{"country":"China","capital":"Beijing"},{"country":"Christmas Island","capital":"Flying Fish Cove"},{"country":"Colombia","capital":"Bogota"},{"country":"Comoros","capital":"Moroni"},{"country":"Cook Islands","capital":"Avarua"},{"country":"Costa Rica","capital":"San Jose"},{"country":"Croatia","capital":"Zagreb"},{"country":"Cuba","capital":"Havana"},{"country":"Curacao","capital":"Willemstad"},{"country":"Cyprus","capital":"Nicosia"},{"country":"Czech Republic","capital":"Prague"},{"country":"Ivory coast","capital":"Yamoussoukro"},{"country":"Democratic Republic of the Congo","capital":"Kinshasa"},{"country":"Denmark","capital":"Copenhagen"},{"country":"Djibouti","capital":"Djibouti"},{"country":"Dominica","capital":"Roseau"},{"country":"Dominican Republic","capital":"Santo Domingo"},{"country":"East Timor","capital":"Dili"},{"country":"Easter Island","capital":"Hanga Roa"},{"country":"Ecuador","capital":"Quito"},{"country":"Egypt","capital":"Cairo"},{"country":"El Salvador","capital":"San Salvador"},{"country":"Equatorial Guinea","capital":"Malabo"},{"country":"Eritrea","capital":"Asmara"},{"country":"Estonia","capital":"Tallinn"},{"country":"Ethiopia","capital":"Addis Ababa"},{"country":"Federated States of Micronesia","capital":"Palikir"},{"country":"Fiji","capital":"Suva"},{"country":"Finland","capital":"Helsinki"},{"country":"France","capital":"Paris"},{"country":"French Guiana","capital":"Cayenne"},{"country":"French Polynesia","capital":"Papeete"},{"country":"Gabon","capital":"Libreville"},{"country":"Gambia","capital":"Banjul"},{"country":"Georgia","capital":"Tbilisi"},{"country":"Germany","capital":"Berlin"},{"country":"Ghana","capital":"Accra"},{"country":"Gibraltar","capital":"Gibraltar"},{"country":"Greece","capital":"Athens"},{"country":"Greenland","capital":"Nuuk"},{"country":"Grenada","capital":"Saint Georges"},{"country":"Guam","capital":"Hagatna"},{"country":"Guatemala","capital":"Guatemala City"},{"country":"Guinea","capital":"Conakry"},{"country":"Guinea-Bissau","capital":"Bissau"},{"country":"Guyana","capital":"Georgetown"},{"country":"Haiti","capital":"Port au Prince"},{"country":"Honduras","capital":"Tegucigalpa"},{"country":"Hungary","capital":"Budapest"},{"country":"Iceland","capital":"Reykjavik"},{"country":"India","capital":"New Delhi"},{"country":"Indonesia","capital":"Jakarta"},{"country":"Iran","capital":"Tehran"},{"country":"Iraq","capital":"Baghdad"},{"country":"Ireland","capital":"Dublin"},{"country":"Israel","capital":"Jerusalem"},{"country":"Italy","capital":"Rome"},{"country":"Jamaica","capital":"Kingston"},{"country":"Japan","capital":"Tokyo"},{"country":"Jordan","capital":"Amman"},{"country":"Kazakhstan","capital":"Astana"},{"country":"Kenya","capital":"Nairobi"},{"country":"Kiribati","capital":"Tarawa"},{"country":"Kosovo","capital":"Pristina"},{"country":"Kuwait","capital":"Kuwait City"},{"country":"Kyrgyzstan","capital":"Bishkek"},{"country":"Laos","capital":"Vientiane"},{"country":"Latvia","capital":"Riga"},{"country":"Lebanon","capital":"Beirut"},{"country":"Lesotho","capital":"Maseru"},{"country":"Liberia","capital":"Monrovia"},{"country":"Libya","capital":"Tripoli"},{"country":"Liechtenstein","capital":"Vaduz"},{"country":"Lithuania","capital":"Vilnius"},{"country":"Luxembourg","capital":"Luxembourg"},{"country":"Macedonia","capital":"Skopje"},{"country":"Madagascar","capital":"Antananarivo"},{"country":"Malawi","capital":"Lilongwe"},{"country":"Malaysia","capital":"Kuala Lumpur"},{"country":"Maldives","capital":"Male"},{"country":"Mali","capital":"Bamako"},{"country":"Malta","capital":"Valletta"},{"country":"Marshall Islands","capital":"Majuro"},{"country":"Mauritania","capital":"Nouakchott"},{"country":"Mauritius","capital":"Port Louis"},{"country":"Mexico","capital":"Mexico City"},{"country":"Moldova","capital":"Chisinau"},{"country":"Monaco","capital":"Monaco"},{"country":"Mongolia","capital":"Ulaanbaatar"},{"country":"Montenegro","capital":"Podgorica"},{"country":"Morocco","capital":"Rabat"},{"country":"Mozambique","capital":"Maputo"},{"country":"Myanmar","capital":"Naypyidaw"},{"country":"Namibia","capital":"Windhoek"},{"country":"Nauru","capital":"Yaren"},{"country":"Nepal","capital":"Kathmandu"},{"country":"Netherlands","capital":"Amsterdam"},{"country":"New Caledonia","capital":"Noumea"},{"country":"New Zealand","capital":"Wellington"},{"country":"Nicaragua","capital":"Managua"},{"country":"Nigeria","capital":"Abuja"},{"country":"Niue","capital":"Alofi"},{"country":"North Korea","capital":"Pyongyang"},{"country":"United Kingdom Northern Ireland","capital":"Belfast"},{"country":"Northern Mariana Islands","capital":"Saipan"},{"country":"Norway","capital":"Oslo"},{"country":"Oman","capital":"Muscat"},{"country":"Pakistan","capital":"Islamabad"},{"country":"Palau","capital":"Ngerulmud"},{"country":"Panama","capital":"Panama City"},{"country":"Papua New Guinea","capital":"Port Moresby"},{"country":"Paraguay","capital":"Asuncion"},{"country":"Peru","capital":"Lima"},{"country":"Philippines","capital":"Manila"},{"country":"Poland","capital":"Warsaw"},{"country":"Portugal","capital":"Lisbon"},{"country":"Puerto Rico","capital":"San Juan"},{"country":"Qatar","capital":"Doha"},{"country":"Taiwan","capital":"Taipei"},{"country":"Republic of the Congo","capital":"Brazzaville"},{"country":"Romania","capital":"Bucharest"},{"country":"Russia","capital":"Moscow"},{"country":"Rwanda","capital":"Kigali"},{"country":"Saint Barts","capital":"Gustavia"},{"country":"Saint Helena","capital":"Jamestown"},{"country":"Saint Kitts and Nevis","capital":"Basseterre"},{"country":"Saint Lucia","capital":"Castries"},{"country":"Saint Martin","capital":"Marigot"},{"country":"Saint Pierre and Miquelon","capital":"saint Pierre"},{"country":"Saint Vincent and the Grenadines","capital":"Kingstown"},{"country":"Samoa","capital":"Apia"},{"country":"San Marino","capital":"San Marino"},{"country":"Saudi Arabia","capital":"Riyadh"},{"country":"Scotland","capital":"Edinburgh"},{"country":"Senegal","capital":"Dakar"},{"country":"Serbia","capital":"Belgrade"},{"country":"Seychelles","capital":"Victoria"},{"country":"Sierra Leone","capital":"Freetown"},{"country":"Singapore","capital":"Singapore"},{"country":"Slovakia","capital":"Bratislava"},{"country":"Slovenia","capital":"Ljubljana"},{"country":"Solomon Islands","capital":"Honiara"},{"country":"Somalia","capital":"Mogadishu"},{"country":"Somaliland","capital":"Hargeisa"},{"country":"South Africa","capital":"Pretoria"},{"country":"South Korea","capital":"Seoul"},{"country":"South Sudan","capital":"Juba"},{"country":"Spain","capital":"Madrid"},{"country":"Sri Lanka","capital":"Sri Jayawardenapura Kotte"},{"country":"Sudan","capital":"Khartoum"},{"country":"Suriname","capital":"Paramaribo"},{"country":"Swaziland","capital":"Mbabane"},{"country":"Sweden","capital":"Stockholm"},{"country":"Switzerland","capital":"Bern"},{"country":"Syria","capital":"Damascus"},{"country":"Sao Tome and Principe","capital":"Sao Tome"},{"country":"Tajikistan","capital":"Dushanbe"},{"country":"Tanzania","capital":"Dodoma"},{"country":"Thailand","capital":"Bangkok"},{"country":"Togo","capital":"Lome"},{"country":"Tonga","capital":"Nukualofa"},{"country":"Trinidad and Tobago","capital":"Port of Spain"},{"country":"Tunisia","capital":"Tunis"},{"country":"Turkey","capital":"Ankara"},{"country":"Tuvalu","capital":"Funafuti"},{"country":"Uganda","capital":"Kampala"},{"country":"Ukraine","capital":"Kiev"},{"country":"United Arab Emirates","capital":"Abu Dhabi"},{"country":"The United Kingdom","capital":"London"},{"country":"The United States","capital":"Washington D.C."},{"country":"Uruguay","capital":"Montevideo"},{"country":"Uzbekistan","capital":"Tashkent"},{"country":"Vanuatu","capital":"Port Vila"},{"country":"Vatican City","capital":"Vatican City"},{"country":"Venezuela","capital":"Caracas"},{"country":"Vietnam","capital":"Hanoi"},{"country":"Wales","capital":"Cardiff"},{"country":"Western Sahara","capital":"El Aaiun"},{"country":"Yemen","capital":"Sana"},{"country":"Zambia","capital":"Lusaka"},{"country":"Zimbabwe","capital":"Harare"}]}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {


let responseHelper = __webpack_require__(0);

let welcomeResponse = __webpack_require__(1);
let intentHandler = __webpack_require__(6);
__webpack_require__(11);

exports.handler = function(event, context) {
    try {

        if (event.request.type === "LaunchRequest") {
            welcomeResponse((sessionAttributes, speechletResponse) => {context.succeed(responseHelper.buildResponse(sessionAttributes, speechletResponse));});
        } else if (event.request.type === "IntentRequest") {
            intentHandler(event.request,
                event.session,
                function callback(sessionAttributes, speechletResponse) {
                    context.succeed(responseHelper.buildResponse(sessionAttributes, speechletResponse));
                });
        } else if (event.request.type === "SessionEndedRequest") {
            context.succeed();
        }
    } catch (e) {
        context.fail("Exception: " + e);
    }
};

/***/ }),
/* 5 */
/***/ (function(module, exports) {


function populateGameQuestions(capitalPairs) {
    let currentIndex = capitalPairs.length,
        questionsList = [],
        temporaryValue, randomIndex;
    //make a new array i.e copy capital pairs into index list
    for (let i = 0; i < capitalPairs.length; i++) {
        questionsList.push(i);
    }
    // While there remain elements to shuffle...
    while (0 !== currentIndex) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;
        // And swap it with the current element.
        temporaryValue = questionsList[currentIndex];
        questionsList[currentIndex] = questionsList[randomIndex];
        questionsList[randomIndex] = temporaryValue;
    }

    return questionsList;
}

module.exports = {populateGameQuestions};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

let welcomeResponse = __webpack_require__(1),
    finishResponse = __webpack_require__(7),
    repeatResponse = __webpack_require__(8),
    helpResponse = __webpack_require__(9),
    answerResponse = __webpack_require__(10);


module.exports = function onIntent(intentRequest, session, callback) {

    let intent = intentRequest.intent,
        intentName = intentRequest.intent.name;

    // handle yes/no intent after the user has been prompted
    if (session.attributes && session.attributes.userPromptedToContinue) {
        delete session.attributes.userPromptedToContinue;
        if ("AMAZON.NoIntent" === intentName) {
            finishResponse(intent, session, callback);
        } else if ("AMAZON.YesIntent" === intentName) {
            repeatResponse(intent, session, callback);
        }
    }
    else if (session.attributes && session.attributes.playAgain) {
        delete session.attributes.playAgain;
        if ("AMAZON.NoIntent" === intentName) {
            finishResponse(intent, session, callback);
        } else if ("AMAZON.YesIntent" === intentName) {
            welcomeResponse(callback);
        }
    }else {

        // dispatch custom intents to handlers here
        if(["AnswerIntent","AnswerOnlyIntent","DontKnowIntent", "AMAZON.YesIntent","AMAZON.NoIntent"].indexOf(intentName) >0){
            answerResponse(intent, session, callback);
        } else if ("AMAZON.StartOverIntent" === intentName) {
            welcomeResponse(callback);
        } else if ("AMAZON.RepeatIntent" === intentName) {
            repeatResponse(intent, session, callback);
        } else if ("AMAZON.HelpIntent" === intentName) {
            helpResponse(intent, session, callback);
        } else if ("AMAZON.StopIntent" === intentName) {
            finishResponse(intent, session, callback);
        } else if ("AMAZON.CancelIntent" === intentName) {
            finishResponse(intent, session, callback);
        }
    }
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

let responseHelper = __webpack_require__(0);

module.exports = function handleFinishSessionRequest(intent, session, callback) {
    callback(session.attributes, responseHelper.buildSpeechletResponseWithoutCard("Thanks for playing capital knowledge.", "", true));
};



/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

let responseHelper = __webpack_require__(0);
let welcomeResponse = __webpack_require__(1);

module.exports = function handleRepeatRequest(intent, session, callback) {
    // Repeat the previous speechOutput and repromptText from the session attributes if available
    // else start a new game session
    if (!session.attributes || !session.attributes.speechOutput) {
        welcomeResponse(callback);
    } else {
        callback(session.attributes,
            responseHelper.buildSpeechletResponseWithoutCard(session.attributes.speechOutput, session.attributes.repromptText, false));
    }
}

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

let responseHelper = __webpack_require__(0);

module.exports = function handleGetHelpRequest(intent, session, callback) {
    // Set a flag to track that we're in the Help state.
    if (session.attributes) {
        session.attributes.userPromptedToContinue = true;
    } else {
        // In case user invokes and asks for help simultaneously.
        session.attributes = {
            userPromptedToContinue: true
        };
    }

    let speechOutput = "To start a new game at any time, say, start new game. " +
        "To repeat the last question, say, repeat. " +
        "Would you like to keep playing?",
        repromptText = "Would you like to keep playing?";
    let shouldEndSession = false;
    callback(session.attributes,
        responseHelper.buildSpeechletResponseWithoutCard(speechOutput, repromptText, shouldEndSession));
};


/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

let responseHelper = __webpack_require__(0);
const capitalPairs = __webpack_require__(3).countries;
let Splain = __webpack_require__(2);

module.exports = function handleAnswerRequest(intent, session, callback) {
    console.log("splain is " + Splain === undefined);
    let speechOutput = "";
    let sessionAttributes = {};
    let gameInProgress = session.attributes && session.attributes.questions;
    let userGaveUp = intent.name === "DontKnowIntent";

    if (!gameInProgress) {
        // If the user responded with an answer but there is no game in progress, ask the user
        // if they want to start a new game. Set a flag to track that we've prompted the user.
        sessionAttributes.userPromptedToContinue = true;
        speechOutput = "There is no game in progress. Do you want to start a new game? ";
        callback(sessionAttributes,
            responseHelper.buildSpeechletResponse("Capital Knowledge", speechOutput, speechOutput, false));
    } else {
        let gameQuestions = session.attributes.questions,
            correctAnswer = session.attributes.correctAnswer,
            currentScore = parseInt(session.attributes.score),
            currentQuestionIndex = parseInt(session.attributes.currentQuestionIndex),
            speechOutputAnalysis = "";

        //If they are correct
        if (intent.slots && intent.slots.Answer && intent.slots.Answer.value.toUpperCase() == correctAnswer.toUpperCase()) {
            currentScore++;
            console.log("andwe is correct");
            speechOutputAnalysis = Splain.process("{{{{congrats ','}}?2}} that is {{correct}}. ");
            console.log("speechOutputAnalysis " + JSON.stringify(speechOutputAnalysis));
            if (currentQuestionIndex == capitalPairs.length - 1) {
                speechOutput += speechOutputAnalysis + "You got every capital correct! congratulations and thanks for playing!";
                callback(session.attributes,
                    responseHelper.buildSpeechletResponse("Capital Knowledge", speechOutput, "", true));
            }

        } else {
            //if they are wrong
            speechOutputAnalysis += Splain.process(`{{onWrong.reply}} {{onWrong.correctReveal}} is ${correctAnswer}. `);
            speechOutputAnalysis += Splain.process(`{{score.end}} ${session.attributes.score}. `);
            speechOutputAnalysis += Splain.process(`{{again.question}} {{again.action}}?`);
            console.log("speechOutputAnalysis " + JSON.stringify(speechOutputAnalysis));
            session.attributes.playAgain = true;
            callback(session.attributes,
                responseHelper.buildSpeechletResponse("Capital Knowledge",speechOutputAnalysis, "", false));
        }

        currentQuestionIndex += 1;
        let capitalPair = capitalPairs[gameQuestions[currentQuestionIndex]];
        let spokenQuestion =  Splain.process("{{questionPrompt}}")  + capitalPair.country;
        correctAnswer = capitalPair.capital;
        let question = spokenQuestion;

        speechOutput += speechOutputAnalysis + Splain.process(`{{score.active}}  ${currentScore.toString()}. `) + question;
        console.log("speechOutput " + JSON.stringify(speechOutput));
        sessionAttributes = {
            "speechOutput": question,
            "repromptText": question,
            "currentQuestionIndex": currentQuestionIndex,
            "correctAnswer": correctAnswer,
            "questions": gameQuestions,
            "score": currentScore,
        };
        callback(sessionAttributes,
            responseHelper.buildSpeechletResponse("Capital Knowledge", speechOutput, question, false));

    }
};

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

let Splain = __webpack_require__(2);

Splain.addEntry({greeting: ["hello", "howdy", "hey", "hi", "welcome", "greetings"]});

Splain.addEntry({
    welcomeMsg: ["{{callToAction}} Capital Knowledge", "heres your first question", "lets begin", "lets start with"],
    callToAction: ["lets play", "its time for", "get ready for", "lets test your", "lets begin"]
});

Splain.addEntry({
    questionPrompt: ["{{question.enquiry question.capital question.in}} "],
    question: {
        enquiry: ["do you know ", "what is", "where is", "which city is", "which place is", "whats", "wheres"],
        capital: ["the capital", "the capital city"],
        in: ["in", "of"]
    }
});

Splain.addEntry({
    onWrong: {
        reply: ["{{onWrong.apology?2}} {{onWrong.pronoun}} {{onWrong.answerNoun}} is {{'sadly'?3}} {{onWrong.wrong}}."],
        apology: ["sorry", "I'm sorry", "unfortunately", "sadly", "unlucky,", "sadly", "regrettably"],
        pronoun: ["that", "your", "the"],
        answerNoun: ["answer", "guess", "capital"],
        wrong: ["wrong", "incorrect", "not correct", "not right", "not the answer", "erroneous", "inaccurate", "mistaken", "false"],
        correctReveal: ["the correct answer", "the correct capital", "the correct place", "the answer you are looking for", "the answer", "the actual capital", "it"]

    },
    score: {
        end: ["your scored",  "you answered", "your total is", "you got", "{{score.both}}"],
        active: ["{{score.both}}", "your on", "your up to", "that makes it"],
        both:["your score is", "your total is"]
    },
    again: {
        question: ["would you like to", "care to", "want to"],
        action: ["play again", "try again", "give it another go", "try and beat your high score", "play another round", "play some more"]
    },
    correct:["correct", "perfect", "exactly right"],
    congrats:["well done", "amazing", "congratulations", "yes", "well played"]
});


/***/ })
/******/ ]);